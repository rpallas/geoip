AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Stackery Serverless API Example Stack
Resources:
  api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName}
        - ResourceName: api
      StageName: !Ref StackeryEnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /lookup:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lookup.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
  lookup:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-lookup
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: lookup
      CodeUri: src/lookup
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 1024
      Timeout: 15
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3CrudPolicy:
            BucketName: !Ref ipdata
      Events:
        apiGETlookup:
          Type: Api
          Properties:
            Path: /lookup
            Method: GET
            RestApiId: !Ref api
      Environment:
        Variables:
          BUCKET_NAME: !Ref ipdata
          BUCKET_ARN: !GetAtt ipdata.Arn
    Metadata:
      StackeryName: lookup
  updateIPData:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-updateIPData
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: updateIPData
      CodeUri: src/updateIPData
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 1024
      Timeout: 600
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3CrudPolicy:
            BucketName: !Ref ipdata
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: cron(30 9 * * MON)
          Metadata:
            StackeryName: updateIPDataSchedule
      Environment:
        Variables:
          BUCKET_NAME: !Ref ipdata
          BUCKET_ARN: !GetAtt ipdata.Arn
  ipdata:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-ipdata-${AWS::AccountId}
Parameters:
  StackeryStackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  StackeryEnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  StackeryEnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)